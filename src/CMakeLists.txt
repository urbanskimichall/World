cmake_minimum_required(VERSION 3.20)
project(kot LANGUAGES CXX)


set(CMAKE_POLICY_VERSION_MINIMUM 3.5)
set(CMAKE_POLICY_VERSION_MAXIMUM 3.29)

# âœ… Ustaw kompilator MinGW (dostosowany do twojej Å›cieÅ¼ki)
set(CMAKE_C_COMPILER "D:/gcc14/mingw64/bin/gcc.exe")
set(CMAKE_CXX_COMPILER "D:/gcc14/mingw64/bin/g++.exe")

# âœ… Wymagany standard C++
set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)


# ðŸ”¹ WyÅ‚Ä…cz niepotrzebne ostrzeÅ¼enia CMake dla MinGW
if (MINGW)
    set(CMAKE_EXE_LINKER_FLAGS "-static-libgcc -static-libstdc++")
endif()

# âœ… GÅ‚Ã³wne ÅºrÃ³dÅ‚a projektu
add_executable(${PROJECT_NAME}
    main.cpp grid/Grid.cpp grid/Grid.hpp World.hpp World.cpp components/Component.cpp components/Component.hpp
    components/ComponentManager.cpp components/ComponentManager.hpp
    components/QuadrangleComponent.cpp components/QuadrangleComponent.hpp
)

# ðŸ”¹ ÅšcieÅ¼ki nagÅ‚Ã³wkÃ³w
target_include_directories(${PROJECT_NAME} PRIVATE include)

# âœ… ZnajdÅº i doÅ‚Ä…cz bibliotekÄ™ SFML 3
# JeÅ›li masz SFML 3 zainstalowane lokalnie, podaj Å›cieÅ¼kÄ™ do jej folderu.
# PrzykÅ‚ad:
#   D:/libs/SFML-3.0.0
#
# Wtedy uÅ¼yj poniÅ¼szej linii:
set(SFML_DIR "D:\\SFML\\SFML-3.0.2\\lib\\cmake\\SFML")

find_package(SFML 3 REQUIRED COMPONENTS Graphics Window System)

target_include_directories(${PROJECT_NAME} PRIVATE ${SFML_INCLUDE_DIRS})

# ðŸ”— poÅ‚Ä…czenie projektu z SFML
target_link_libraries(${PROJECT_NAME} PRIVATE SFML::Graphics SFML::System SFML::Window)

# âœ… Ustaw folder wyjÅ›ciowy na /build/bin
set_target_properties(${PROJECT_NAME} PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
)